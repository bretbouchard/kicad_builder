name: LED Touch Grid CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y kicad

      - name: Set up Python environment
        run: |
          python -m pip install --upgrade pip
          pip install -r hardware/requirements.txt
          pip install -r hardware/requirements-dev.txt

      - name: Repo lint + typecheck
        run: |
          python -m pip install --upgrade pip
          pip install ruff mypy
          ruff src tests
          mypy --strict src || true

      - name: Run hardware tests
        run: |
          pytest hardware/projects/led_touch_grid/tests/ -v

      - name: Generate all project files
        run: |
          make -C hardware/projects/led_touch_grid gen

      - name: Run validation
        run: |
          make -C hardware/projects/led_touch_grid validate

      - name: Export fabrication outputs
        run: |
          make -C hardware/projects/led_touch_grid export

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: led-touch-grid-artifacts
          path: |
            hardware/projects/led_touch_grid/out/
            hardware/projects/led_touch_grid/kicad/
            hardware/projects/led_touch_grid/docs/

      - name: Upload auto-register diagnostics (if any)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: auto-register-diagnostics
          path: |
            **/auto_register_diagnostics.json

      - name: Annotate auto-register diagnostics (best-effort)
        if: always()
        run: |
          python tools/annotate_diagnostics.py || true

      - name: Fail on auto-register diagnostics
        if: always()
        run: |
          python tools/collect_diagnostics.py



  docker-ci:
    runs-on: ubuntu-latest
    container:
      image: python:3.11-slim
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y kicad

      - name: Set up Python environment
        run: |
          python -m pip install --upgrade pip
          pip install -r hardware/requirements.txt
          pip install -r hardware/requirements-dev.txt

      - name: Run CI workflow validation tests
        run: |
          pytest hardware/projects/led_touch_grid/tests/ -v
          make -C hardware/projects/led_touch_grid validate
          make -C hardware/projects/led_touch_grid export

      - name: Upload auto-register diagnostics (if any)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: auto-register-diagnostics
          path: |
            **/auto_register_diagnostics.json

      - name: Annotate auto-register diagnostics (best-effort)
        if: always()
        run: |
          python tools/annotate_diagnostics.py || true
